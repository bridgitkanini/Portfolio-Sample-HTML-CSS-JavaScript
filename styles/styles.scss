*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    list-style: none;
}
  
:root{
    --color-primary: #191d2b;
    --color-secondary: #6ba663;
    --color-white: #FFFFFF;
    --color-black: #000;
    --color-grey0: #f8f8f8;
    --color-grey-1: #dbe1e8;
    --color-grey-2: #b2becd;
    --color-grey-:3#6c7983;
    --color-grey-4: #454e56;
    --color-grey-5: #2a2e35;
    --color-grey-6: #12181b;
    --br-sm-2: 14px;
    --box-shadow-1: 0 3px 15px rgba(0,0,0,.3);
    --transition: all .4s ease-in-out;
}
  
body{
    background-color: var(--color-primary);
    font-family: "Poppins", sans-serif;
    font-size: 1.1rem;
    color: var(--color-white);
    transition: var(--transition);
}/*# sourceMappingURL=styles.css.map */

a{
    display: inline-block;
    text-decoration: none;
    color: inherit;
    font-family: inherit;
}

header{
    height: 100vh;
    color: var(--color-white);
    overflow: hidden;
}

section{
    min-height: 100vh;
    width: 100%;
    position: absolute;
    left: 0;
    top: 0;
    padding: 3rem 18rem;
  }

.section{
    transform: translateY(-100%) scale(0); //Off-screen by default.
    transition: var(--transition); //Can create a variable bc it appears a lot.
    background-color: var(--color-primary);
  }
  
.sec1{
    display: none;
    transform: translateY(0) scale(1);
}
//Can give each section a different background color.

.sec2{
    display: none;
    transform: translateY(0) scale(1);
}

.sec3{
    display: none;
    transform: translateY(0) scale(1);
}

.sec4{
    display: none;
    transform: translateY(0) scale(1);
}

.sec5{
    display: none;
    transform: translateY(0) scale(1);
}

.active{
    display: block;
    animation: scaleAnim 1s ease-in-out;
    @keyframes scaleAnim {
        0%{
            transform: translateY(-100%) scaleY(0);
        }
        100%{
            transform: translateY(0) scaleY(1);
        }
    }
}

//Controls
.controls{
    position: fixed;
    z-index: 10;
    top: 50%;
    right: 3%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    transform: translate(-50%);
    .active-btn{
        background-color: var(--color-secondary) !important;
        transition: var(--transition);
        i{
            color: var(--color-white) !important;
        }
    }
    .control{ //Nesting is a SASS feature.
        padding: 1rem;
        cursor: pointer;
        background-color: var(--color-grey-4);
        width: 55px;
        height: 55px; //Both width & height are same for the icons to be a circle.
        border-radius: 50%; //Circle effect.
        display: flex;
        align-items: center;
        justify-content: center; //Display, align & justify to centralise icons within circle.
        margin: .7rem 0;
        box-shadow: var(--box-shadow-1);
        i{
            font-size: 1.2rem;
            color: var(--color-grey-2);
            pointer-events: none;
        }
    }
}

//Header Content
.header-content{
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    height: 100%;
    .left-header{
        display: flex;
        align-items: center;
        position: relative;
        .h-shape{
            width: 65%;
            height: 100%;
            background-color: var(--color-secondary);
            position: absolute;
            left: 0;
            top: 0;
            z-index: -1;
            clip-path: polygon(0 0, 37% 0, 73% 100%, 0% 100%);
        }
        .image{
            border-radius: var(--br-sm-2);
            height: 90%;
            width: 68%;
            margin-left: 4rem;
            background-color: var(--color-black);
            transition: var(--transition);
            img{
                width: 100%;
                height: 100%;
                object-fit: cover; //So the image doesn't stretch out.
                transition: var(--transition);
                filter: grayscale(100%);
                &:hover{
                    filter: grayscale(0);
                }
            }
        }
    }

    .right-header{
        display: flex;
        flex-direction: column;
        justify-content: center;
        padding-right: 18rem;
        .name{
            font-size: 2.5rem;
            span{
                color: var(--color-secondary);
            }
        }
        p{
            margin: 1.5rem;
            line-height: 2rem;
        }
    }
}

//About
.about-container{
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    padding-top: 3.5rem;
    padding-bottom: 5rem;
    .right-about{
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        grid-gap: 2rem;
        .about-item{
            border: 1px solid var(--color-grey-5);
            border-radius: 5px;
            transition: var(--transition);
            box-shadow: 1px 2px 15px rgba(0,0,0,.1);
            &:hover{
                cursor: default;
                transform: translateY(-5px);
                border: 1px solid var(--color-secondary);
                box-shadow: 1px 2px 15px rgba(0,0,0,.32);
            }
            .about-text{
                padding: 1.5rem;
                display: flex;
                flex-direction: column;
                .large-text{
                    font-size: 2rem;
                    font-weight: 700;
                    color: var(--color-secondary);
                }
                .small-text{
                    padding-left: 3rem;
                    position: relative;
                    text-transform: uppercase;
                    font-size: 1.2rem;
                    color: var(--color-grey-1);
                    letter-spacing: 2px;
                    &::before{
                        content: "";
                        position: absolute;
                        left: 0;
                        top: 15px;
                        width: 2rem;
                        height: 2px;
                        background-color: var(--color-grey-5);
                    }
                }
            }
        }
    }

    .left-about{
        padding-right: 5rem;
        p{
            line-height: 2rem;
            padding: 1rem;
            color: var(--color-grey-1);
        }
        h4{
            font-size: 2rem;
            text-transform: uppercase;
        }
    }
}

.about-stats{
    padding-bottom: 4rem;
    .progress-bars{
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        grid-gap: 2rem;
        .progress-bar{
            display: flex;
            flex-direction: column;
            .progress-title{
                text-transform: uppercase;
                font-weight: 500;
            }
            .progress-container{
                display: flex;
                align-items: center;
                .progress-text{
                    color: var(--color-grey-2);
                }
                .progress{
                    width: 100%;
                    height: .45rem;
                    background-color: var(--color-grey-4);
                    margin-left: 1rem;
                    position: relative;
                    span{ //To fill in the progress bar styled in `.progress`.
                        position: absolute;
                        top: 0;
                        left: 0;
                        height: 100%;
                        background-color: var(--color-secondary);
                        transition: var(--transition);
                    }
                    .javascript{
                        width: 90%;
                    }
                    .nodejs{
                        width: 80%;
                    }
                    .reactjs{
                        width: 68%;
                    }
                    .html{
                        width: 37%;
                    }
                    .css{
                        width: 73%;
                    }
                }
            }
        }
    }
}

.stat-title{
    text-transform: uppercase;
    font-size: 1.4rem;
    text-align: center;
    padding: 3.5rem 0;
    position: relative;
    &::before{
        content: "";
        left: 50%;
        top: 0;
        width: 40%;
        height: 1px;
        background-color: var(--color-grey-5);
        transform: translateX(-50%);
    }
}

//Timeline.
.timeline{
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-gap: 2rem;
    padding-bottom: 3rem;
    .timeline-item{
        position: relative;
        padding-left: 3rem;
        border-left: 1px solid var(--color-grey-5);
        .timeline-icon{
            position: absolute;
            left: -27px; //Can play around with this to see what number fits best; distance between text and icon.
            top: 0;
            background-color: var(--color-secondary);
            width: 50px;
            height: 50px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center; //Display, align & justify to centralise icons within circle.
            i{
                font-size: 1.3rem;
            }
        }
        .timeline-duration{
            padding: .2rem .6rem;
            background-color: var(--color-grey-5);
            border-radius: 15px;
            display: inline-block;
            font-size: .8rem;
            text-transform: uppercase;
            font-weight: 500;
        }
        h5{
            padding: 1rem 0;
            text-transform: uppercase;
            font-size: 1.3rem;
            font-weight: 600;
            span{
                color: var(--color-grey-2);
                font-size: 1.2rem;
                font-weight: 500;
            }          
        }
        p{
            color: var(--color-grey-2);
        }
    }
}

//Independent components
.btn-container{
    display: flex;
    align-self: flex-start; //So button doesn't occupy the whole space.
}
.main-btn{
    border-radius: 30px;
    color: inherit;
    font-weight: 600;
    position: relative;
    border: 1px solid var(--color-secondary);
    display: flex;
    align-self: flex-start;
    display: flex;
    align-items: center;
    overflow: hidden;
    .btn-text{
        padding: 0 2rem;
    }
    .btn-icon{
        background-color: var(--color-secondary);
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 50%;
        padding: 1rem;
    }
    &::before{
        content: "";
        position: absolute;
        top: 0;
        right: 0;
        transform: translateX(100%); //Not -100%, the color should fill from the icon, not towards it.
        transition: var(--transition);
        z-index: -1;
    }
    &:hover{
        &::before{
            width: 100%;
            height: 100%;
            background-color: var(--color-secondary);
            transform: translateX(0); //Zero from 100% above to go back to original.
        }
    }
}

.main-title{
    text-align: center;
    h2{
        position: relative;
        text-transform: uppercase;
        font-size: 3.1rem;
        font-weight: 700;
        span{
            color: var(--color-secondary);
        }
        .bg-text{
            position: absolute;
            top: 50%;
            left: 50%;
            color: var(--color-grey-5);
            transition: var(--transition);
            z-index: -1;
            transform: translate(-50%, -50%); //Means we want to center something.
            font-weight: 800;
            font-size: 4.8rem;
        }
    }
}

